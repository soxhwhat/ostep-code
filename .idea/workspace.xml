<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="CMakePresetLoader">{
  &quot;useNewFormat&quot;: true
}</component>
  <component name="CMakeReloadState">
    <option name="reloaded" value="true" />
  </component>
  <component name="CMakeRunConfigurationManager">
    <generated>
      <config projectName="ostep" targetName="temp" />
      <config projectName="ostep" targetName="p1" />
      <config projectName="ostep" targetName="p2" />
      <config projectName="ostep" targetName="IO_Redirect" />
      <config projectName="ostep" targetName="cpu" />
      <config projectName="ostep" targetName="threads" />
      <config projectName="ostep" targetName="mem" />
      <config projectName="ostep" targetName="p3" />
      <config projectName="ostep" targetName="p4" />
      <config projectName="ostep" targetName="mutil" />
      <config projectName="ostep" targetName="io" />
    </generated>
  </component>
  <component name="CMakeSettings" AUTO_RELOAD="true">
    <configurations>
      <configuration PROFILE_NAME="Debug-MinGW" ENABLED="true" CONFIG_NAME="Debug" TOOLCHAIN_NAME="MinGW" />
      <configuration PROFILE_NAME="Debug-WSL" ENABLED="true" CONFIG_NAME="Debug" TOOLCHAIN_NAME="WSL" />
    </configurations>
  </component>
  <component name="ChangeListManager">
    <list default="true" id="e2f348a9-531d-4f4e-80bb-2123ec5a133c" name="变更" comment="feature：进程API&#10;&#10;harvest:&#10;1.fork()系统调用：操作系统提供创建新进程的方法。新创建的进程几乎与调用进程完全一样，对操作系统来说，有两个完全一样的p1程序在运行，并都从fork()系统调用中返回。新创建的进程称为子进程（child），原来的进程称为父进程（parent）。子进程不会从main()函数开始执行（因此hello world信息只输出了一次），而是直接从fork()系统调用返回，就好像是它自己调用了fork()。&#10;2.wait():父进程调用wait()，延迟自己的执行，直到子进程执行完毕。当子进程结束时，wait()才返回父进程。&#10;3.exec():可以让子进程执行与父进程不同的程序。&#10;exec()会从可执行程序中加载代码和静态数据，并用它覆盖自己的代码段、堆、栈、内存空间，操作系统执行该进程，将参数通过argv传递给该进程，对exec()的成功调用永远不会返回。">
      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/CMakeLists.txt" beforeDir="false" afterPath="$PROJECT_DIR$/CMakeLists.txt" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cpu-api/p4.c" beforeDir="false" afterPath="$PROJECT_DIR$/cpu-api/p4.c" afterDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="ChangesViewManager">
    <option name="groupingKeys">
      <option value="directory" />
    </option>
  </component>
  <component name="ClangdSettings">
    <option name="formatViaClangd" value="false" />
  </component>
  <component name="ExecutionTargetManager" SELECTED_TARGET="CMakeBuildProfile:Debug-WSL" />
  <component name="FileTemplateManagerImpl">
    <option name="RECENT_TEMPLATES">
      <list>
        <option value="CMakeLists.txt" />
      </list>
    </option>
  </component>
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="MarkdownSettingsMigration">
    <option name="stateVersion" value="1" />
  </component>
  <component name="ProjectApplicationVersion">
    <option name="ide" value="CLion" />
    <option name="majorVersion" value="2022" />
    <option name="minorVersion" value="2.4" />
  </component>
  <component name="ProjectId" id="2I7QZw1SNkntQrdbeFpV8yAqDNq" />
  <component name="ProjectLevelVcsManager">
    <ConfirmationsSetting value="2" id="Add" />
  </component>
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent"><![CDATA[{
  "keyToString": {
    "RunOnceActivity.OpenProjectViewOnStart": "true",
    "RunOnceActivity.ShowReadmeOnStart": "true",
    "RunOnceActivity.cidr.known.project.marker": "true",
    "WebServerToolWindowFactoryState": "false",
    "cf.first.check.clang-format": "false",
    "cidr.known.project.marker": "true",
    "last_opened_file_path": "D:/GitRepos/ostep-homework",
    "node.js.detected.package.eslint": "true",
    "node.js.selected.package.eslint": "(autodetect)",
    "nodejs_package_manager_path": "npm",
    "settings.editor.selected.configurable": "CMakeSettings"
  }
}]]></component>
  <component name="RecentsManager">
    <key name="CopyFile.RECENT_KEYS">
      <recent name="D:\GitRepos\ostep\cmake-build-debug" />
    </key>
  </component>
  <component name="RunManager" selected="CMake 应用程序.p4">
    <configuration default="true" type="CLionExternalRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" PASS_PARENT_ENVS_2="true">
      <method v="2">
        <option name="CLION.EXTERNAL.BUILD" enabled="true" />
      </method>
    </configuration>
    <configuration name="IO_Redirect" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="ostep" TARGET_NAME="IO_Redirect" CONFIG_NAME="Debug-MinGW" RUN_TARGET_PROJECT_NAME="ostep" RUN_TARGET_NAME="IO_Redirect">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="cpu" type="CMakeRunConfiguration" factoryName="Application" singleton="false" PROGRAM_PARAMS="b" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="ostep" TARGET_NAME="cpu" CONFIG_NAME="Debug-MinGW" RUN_TARGET_PROJECT_NAME="ostep" RUN_TARGET_NAME="cpu">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="io" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="ostep" TARGET_NAME="io" CONFIG_NAME="Debug-MinGW" RUN_TARGET_PROJECT_NAME="ostep" RUN_TARGET_NAME="io">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="mem" type="CMakeRunConfiguration" factoryName="Application" singleton="false" PROGRAM_PARAMS="test" REDIRECT_INPUT="true" REDIRECT_INPUT_PATH="$PROJECT_DIR$/a.txt" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="ostep" TARGET_NAME="mem" CONFIG_NAME="Debug-MinGW" RUN_TARGET_PROJECT_NAME="ostep" RUN_TARGET_NAME="mem">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="mutil" type="CMakeRunConfiguration" factoryName="Application" PROGRAM_PARAMS="2" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="ostep" TARGET_NAME="mutil" CONFIG_NAME="Debug-MinGW" RUN_TARGET_PROJECT_NAME="ostep" RUN_TARGET_NAME="mutil">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="p1" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="ostep" TARGET_NAME="p1" CONFIG_NAME="Debug-MinGW" RUN_TARGET_PROJECT_NAME="ostep" RUN_TARGET_NAME="p1">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="p2" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="ostep" TARGET_NAME="p2" CONFIG_NAME="Debug-MinGW" RUN_TARGET_PROJECT_NAME="ostep" RUN_TARGET_NAME="p2">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="p3" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="ostep" TARGET_NAME="p3" CONFIG_NAME="Debug-MinGW" RUN_TARGET_PROJECT_NAME="ostep" RUN_TARGET_NAME="p3">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="p4" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="ostep" TARGET_NAME="p4" CONFIG_NAME="Debug-MinGW" RUN_TARGET_PROJECT_NAME="ostep" RUN_TARGET_NAME="p4">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="temp (1)" type="CMakeRunConfiguration" factoryName="Application" temporary="true" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="ostep" TARGET_NAME="temp" CONFIG_NAME="Debug-MinGW" RUN_TARGET_PROJECT_NAME="ostep" RUN_TARGET_NAME="temp">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="temp" type="CMakeRunConfiguration" factoryName="Application" PROGRAM_PARAMS="a" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="ostep" TARGET_NAME="ostep" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="ostep" RUN_TARGET_NAME="ostep">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="threads" type="CMakeRunConfiguration" factoryName="Application" PROGRAM_PARAMS="100000000" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="ostep" TARGET_NAME="threads" CONFIG_NAME="Debug-MinGW" RUN_TARGET_PROJECT_NAME="ostep" RUN_TARGET_NAME="threads">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="io" type="MAKEFILE_TARGET_RUN_CONFIGURATION" factoryName="Makefile" temporary="true">
      <makefile filename="$PROJECT_DIR$/intro/Makefile" target="io" workingDirectory="" arguments="">
        <envs />
      </makefile>
      <method v="2" />
    </configuration>
    <list>
      <item itemvalue="CMake 应用程序.temp" />
      <item itemvalue="CMake 应用程序.cpu" />
      <item itemvalue="CMake 应用程序.io" />
      <item itemvalue="CMake 应用程序.IO_Redirect" />
      <item itemvalue="CMake 应用程序.mem" />
      <item itemvalue="CMake 应用程序.mutil" />
      <item itemvalue="CMake 应用程序.p1" />
      <item itemvalue="CMake 应用程序.p2" />
      <item itemvalue="CMake 应用程序.p3" />
      <item itemvalue="CMake 应用程序.p4" />
      <item itemvalue="CMake 应用程序.threads" />
      <item itemvalue="CMake 应用程序.temp (1)" />
      <item itemvalue="Makefile 目标.io" />
    </list>
    <recent_temporary>
      <list>
        <item itemvalue="Makefile 目标.io" />
        <item itemvalue="CMake 应用程序.temp (1)" />
      </list>
    </recent_temporary>
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="应用程序级" UseSingleDictionary="true" transferred="true" />
  <component name="TaskManager">
    <task active="true" id="Default" summary="默认任务">
      <changelist id="e2f348a9-531d-4f4e-80bb-2123ec5a133c" name="变更" comment="" />
      <created>1669530201647</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1669530201647</updated>
      <workItem from="1669530204507" duration="700000" />
      <workItem from="1669530962452" duration="1479000" />
      <workItem from="1669542124681" duration="1948000" />
      <workItem from="1669544103226" duration="14632000" />
      <workItem from="1669611177950" duration="1695000" />
      <workItem from="1669619141721" duration="1766000" />
      <workItem from="1669624271880" duration="7386000" />
    </task>
    <task id="LOCAL-00001" summary="feature：clion使用初体验">
      <created>1669531749705</created>
      <option name="number" value="00001" />
      <option name="presentableId" value="LOCAL-00001" />
      <option name="project" value="LOCAL" />
      <updated>1669531749705</updated>
    </task>
    <task id="LOCAL-00002" summary="feature：Clion使用初体验">
      <created>1669531786137</created>
      <option name="number" value="00002" />
      <option name="presentableId" value="LOCAL-00002" />
      <option name="project" value="LOCAL" />
      <updated>1669531786137</updated>
    </task>
    <task id="LOCAL-00003" summary="feature：操作系统CPU和内存虚拟化&#10;&#10;change:&#10;1.多进程操作&#10;2.HWZen的输出重定向代码">
      <created>1669556588079</created>
      <option name="number" value="00003" />
      <option name="presentableId" value="LOCAL-00003" />
      <option name="project" value="LOCAL" />
      <updated>1669556588079</updated>
    </task>
    <task id="LOCAL-00004" summary="feature：进程API&#10;&#10;harvest:&#10;1.fork()系统调用：操作系统提供创建新进程的方法。新创建的进程几乎与调用进程完全一样，对操作系统来说，有两个完全一样的p1程序在运行，并都从fork()系统调用中返回。新创建的进程称为子进程（child），原来的进程称为父进程（parent）。子进程不会从main()函数开始执行（因此hello world信息只输出了一次），而是直接从fork()系统调用返回，就好像是它自己调用了fork()。&#10;2.wait():父进程调用wait()，延迟自己的执行，直到子进程执行完毕。当子进程结束时，wait()才返回父进程。&#10;3.exec():可以让子进程执行与父进程不同的程序。&#10;exec()会从可执行程序中加载代码和静态数据，并用它覆盖自己的代码段、堆、栈、内存空间，操作系统执行该进程，将参数通过argv传递给该进程，对exec()的成功调用永远不会返回。">
      <created>1669631869288</created>
      <option name="number" value="00004" />
      <option name="presentableId" value="LOCAL-00004" />
      <option name="project" value="LOCAL" />
      <updated>1669631869288</updated>
    </task>
    <option name="localTasksCounter" value="5" />
    <servers />
  </component>
  <component name="TypeScriptGeneratedFilesManager">
    <option name="version" value="3" />
  </component>
  <component name="Vcs.Log.Tabs.Properties">
    <option name="TAB_STATES">
      <map>
        <entry key="MAIN">
          <value>
            <State />
          </value>
        </entry>
      </map>
    </option>
  </component>
  <component name="VcsManagerConfiguration">
    <MESSAGE value="feature：clion使用初体验" />
    <MESSAGE value="feature：Clion使用初体验" />
    <MESSAGE value="feature：操作系统CPU和内存虚拟化&#10;&#10;change:&#10;1.多进程操作&#10;2.HWZen的输出重定向代码" />
    <MESSAGE value="feature：进程API&#10;&#10;harvest:&#10;1.fork()系统调用：操作系统提供创建新进程的方法。新创建的进程几乎与调用进程完全一样，对操作系统来说，有两个完全一样的p1程序在运行，并都从fork()系统调用中返回。新创建的进程称为子进程（child），原来的进程称为父进程（parent）。子进程不会从main()函数开始执行（因此hello world信息只输出了一次），而是直接从fork()系统调用返回，就好像是它自己调用了fork()。&#10;2.wait():父进程调用wait()，延迟自己的执行，直到子进程执行完毕。当子进程结束时，wait()才返回父进程。&#10;3.exec():可以让子进程执行与父进程不同的程序。&#10;exec()会从可执行程序中加载代码和静态数据，并用它覆盖自己的代码段、堆、栈、内存空间，操作系统执行该进程，将参数通过argv传递给该进程，对exec()的成功调用永远不会返回。" />
    <option name="LAST_COMMIT_MESSAGE" value="feature：进程API&#10;&#10;harvest:&#10;1.fork()系统调用：操作系统提供创建新进程的方法。新创建的进程几乎与调用进程完全一样，对操作系统来说，有两个完全一样的p1程序在运行，并都从fork()系统调用中返回。新创建的进程称为子进程（child），原来的进程称为父进程（parent）。子进程不会从main()函数开始执行（因此hello world信息只输出了一次），而是直接从fork()系统调用返回，就好像是它自己调用了fork()。&#10;2.wait():父进程调用wait()，延迟自己的执行，直到子进程执行完毕。当子进程结束时，wait()才返回父进程。&#10;3.exec():可以让子进程执行与父进程不同的程序。&#10;exec()会从可执行程序中加载代码和静态数据，并用它覆盖自己的代码段、堆、栈、内存空间，操作系统执行该进程，将参数通过argv传递给该进程，对exec()的成功调用永远不会返回。" />
  </component>
  <component name="XDebuggerManager">
    <breakpoint-manager>
      <breakpoints>
        <line-breakpoint enabled="true" type="com.jetbrains.cidr.execution.debugger.OCBreakpointType">
          <url>file://$PROJECT_DIR$/intro/mem.c</url>
          <line>14</line>
          <option name="timeStamp" value="3" />
        </line-breakpoint>
        <line-breakpoint enabled="true" type="com.jetbrains.cidr.execution.debugger.OCBreakpointType">
          <url>file://$PROJECT_DIR$/cpu-api/p1.c</url>
          <line>8</line>
          <option name="timeStamp" value="8" />
        </line-breakpoint>
      </breakpoints>
    </breakpoint-manager>
  </component>
  <component name="XSLT-Support.FileAssociations.UIState">
    <expand />
    <select />
  </component>
</project>